{
 "Resources": {
  "ExecutionRole605A040B": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "lambda.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Description": "The IAM Role assumed to execute the part that downloads data from the website to the database in the dev environment",
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AWSLambda_FullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonRDSDataFullAccess"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/SecretsManagerReadWrite"
       ]
      ]
     }
    ],
    "Policies": [
     {
      "PolicyDocument": {
       "Statement": [
        {
         "Action": "events:PutEvents",
         "Effect": "Allow",
         "Resource": "*"
        },
        {
         "Action": [
          "logs:CreateLogGroup",
          "logs:CreateLogStream",
          "logs:PutLogEvents"
         ],
         "Effect": "Allow",
         "Resource": "arn:aws:logs:*:*:*"
        },
        {
         "Action": [
          "ec2:CreateNetworkInterface",
          "ec2:DescribeNetworkInterfaces",
          "ec2:DeleteNetworkInterface"
         ],
         "Effect": "Allow",
         "Resource": "*"
        }
       ],
       "Version": "2012-10-17"
      },
      "PolicyName": "misc-policies"
     }
    ],
    "RoleName": "dev-execution-role"
   },
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/ExecutionRole/Resource"
   }
  },
  "devDownloaderSecurityGroupD824C399": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatic security group for Lambda Function DataExtractionStackdevDownloaderE290A3F4",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "VpcId": "vpc-06feb24bad800e677"
   },
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/dev-Downloader/SecurityGroup/Resource"
   }
  },
  "devDownloader3573AEF8": {
   "Type": "AWS::Lambda::Function",
   "Properties": {
    "Code": {
     "S3Bucket": "cdk-hnb659fds-assets-142114255837-us-east-1",
     "S3Key": "5efd2c2fa288f367abd9bdc3f7c665992c4b02d6985f4eabb1e61b84f1341161.zip"
    },
    "Environment": {
     "Variables": {
      "environment": "dev"
     }
    },
    "FunctionName": "dev-downloader",
    "Handler": "lambda_function.lambda_handler",
    "Role": {
     "Fn::GetAtt": [
      "ExecutionRole605A040B",
      "Arn"
     ]
    },
    "Runtime": "python3.9",
    "VpcConfig": {
     "SecurityGroupIds": [
      {
       "Fn::GetAtt": [
        "devDownloaderSecurityGroupD824C399",
        "GroupId"
       ]
      }
     ],
     "SubnetIds": [
      "subnet-030b7f93171e369f9",
      "subnet-0cd0b120531d3c613"
     ]
    }
   },
   "DependsOn": [
    "ExecutionRole605A040B"
   ],
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/dev-Downloader/Resource",
    "aws:asset:path": "asset.5efd2c2fa288f367abd9bdc3f7c665992c4b02d6985f4eabb1e61b84f1341161",
    "aws:asset:is-bundled": true,
    "aws:asset:property": "Code"
   }
  },
  "LambdaWorkerRule58CC89D4": {
   "Type": "AWS::Events::Rule",
   "Properties": {
    "ScheduleExpression": "cron(0 0 1 * ? *)",
    "State": "ENABLED",
    "Targets": [
     {
      "Arn": {
       "Fn::GetAtt": [
        "devDownloader3573AEF8",
        "Arn"
       ]
      },
      "Id": "Target0",
      "RetryPolicy": {
       "MaximumRetryAttempts": 2
      }
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/LambdaWorkerRule/Resource"
   }
  },
  "LambdaWorkerRuleAllowEventRuleDataExtractionStackdevDownloaderE290A3F429FD408B": {
   "Type": "AWS::Lambda::Permission",
   "Properties": {
    "Action": "lambda:InvokeFunction",
    "FunctionName": {
     "Fn::GetAtt": [
      "devDownloader3573AEF8",
      "Arn"
     ]
    },
    "Principal": "events.amazonaws.com",
    "SourceArn": {
     "Fn::GetAtt": [
      "LambdaWorkerRule58CC89D4",
      "Arn"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/LambdaWorkerRule/AllowEventRuleDataExtractionStackdevDownloaderE290A3F4"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/1WOsQ7CMAxEv4XdNdCyMAISrKh8AEqDAdM2QXECqqL8OykwwPTsO519JS4XOJuopxT61BYdNxgPXukWsnSMrHqMte0INmczMkGn+uakMG6D0Z6tGZ3feU+uZ5G8JZDqqETIC65G5B3XQbfk10oISJf5Geng2A87Z8N9zP8JCehBJudjHb4lMlOCmsQGpwneh3PjC5vL2/8aCfaDv1ozrXCJ82pyE+bCBeO5J6w/fAFYGsng/QAAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "DataExtractionStack/CDKMetadata/Default"
   }
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}